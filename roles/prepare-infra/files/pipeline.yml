apiVersion: v1
kind: BuildConfig
metadata:
  name: {{project_prefix}}-pipeline
  namespace: 
  labels:
    name: {{project_prefix}}-pipeline
  annotations:
    pipeline.alpha.openshift.io/uses: '[{"name": "{{app_name}}", "namespace": "{{project_prefix}}-dev", "kind": "DeploymentConfig"},{"name": "{{app_name}}", "namespace": "{{project_prefix}}-test", "kind": "DeploymentConfig"}]'
spec:
  runPolicy: Serial
  source:
    type: Git
    git:
      uri: '{{git_repo}}'
      ref: '{{git_ref}}'
  strategy:
    type: JenkinsPipeline
    jenkinsPipelineStrategy:
      jenkinsfile: |-
        node {
          stage 'buildInDevelopment'
          openshiftBuild(namespace: '{{project_prefix}}-dev', buildConfig: '{{app_name}}', showBuildLogs: 'true')
        }

        node {
          stage 'deployInDevelopment'
          openshiftDeploy(namespace: '{{project_prefix}}-dev', deploymentConfig: '{{app_name}}')
          openshiftScale(namespace: '{{project_prefix}}-dev', deploymentConfig: '{{app_name}}',replicaCount: '2')
        }

        node {
          stage 'test'
          try {
            sh "curl -s --head --request GET http://{{app_name}}.project_prefix:{{test_port}}/{{test_path}} | grep '200 OK'"
            return true
          } catch (Exception e) {
            return false
          }
        }

        node {
          stage 'approveTestDeployment' 
          input 'Promote the Dev image to Test?'
        }

        node {
          stage 'deployInTesting'
          openshiftTag(namespace: '{{project_prefix}}-dev', sourceStream: '{{app_name}}',  sourceTag: 'latest', destinationNamespace: '{{project_prefix}}-test',  destinationStream: '{{app_name}}', destinationTag: 'latest')
          openshiftDeploy(namespace: '{{project_prefix}}-test', deploymentConfig: '{{app_name}}')
          openshiftScale(namespace: '{{project_prefix}}-test', deploymentConfig: '{{app_name}}',replicaCount: '3')
        }
  triggers:
    - github:
        secret: secret101
      type: GitHub
    - generic:
        secret: secret101
      type: Generic        
  output:
  resources:
  postCommit: